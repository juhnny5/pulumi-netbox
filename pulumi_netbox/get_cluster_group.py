# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetClusterGroupResult',
    'AwaitableGetClusterGroupResult',
    'get_cluster_group',
    'get_cluster_group_output',
]

@pulumi.output_type
class GetClusterGroupResult:
    """
    A collection of values returned by getClusterGroup.
    """
    def __init__(__self__, cluster_group_id=None, id=None, name=None):
        if cluster_group_id and not isinstance(cluster_group_id, int):
            raise TypeError("Expected argument 'cluster_group_id' to be a int")
        pulumi.set(__self__, "cluster_group_id", cluster_group_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="clusterGroupId")
    def cluster_group_id(self) -> int:
        return pulumi.get(self, "cluster_group_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")


class AwaitableGetClusterGroupResult(GetClusterGroupResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetClusterGroupResult(
            cluster_group_id=self.cluster_group_id,
            id=self.id,
            name=self.name)


def get_cluster_group(name: Optional[str] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetClusterGroupResult:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_netbox as netbox

    dc_west = netbox.get_cluster_group(name="dc-west")
    ```
    """
    __args__ = dict()
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('netbox:index/getClusterGroup:getClusterGroup', __args__, opts=opts, typ=GetClusterGroupResult).value

    return AwaitableGetClusterGroupResult(
        cluster_group_id=__ret__.cluster_group_id,
        id=__ret__.id,
        name=__ret__.name)


@_utilities.lift_output_func(get_cluster_group)
def get_cluster_group_output(name: Optional[pulumi.Input[str]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetClusterGroupResult]:
    """
    ## Example Usage

    ```python
    import pulumi
    import pulumi_netbox as netbox

    dc_west = netbox.get_cluster_group(name="dc-west")
    ```
    """
    ...
